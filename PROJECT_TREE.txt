umanity-solana/
├── 📋 Configuration
│   ├── package.json                  # Node dependencies & scripts
│   ├── tsconfig.json                 # TypeScript config
│   ├── tailwind.config.ts            # Tailwind CSS config
│   ├── postcss.config.mjs            # PostCSS config
│   ├── next.config.ts                # Next.js config
│   ├── .eslintrc.json                # ESLint rules
│   ├── .gitignore                    # Git ignore patterns
│   ├── .env.example                  # Environment variables template
│   ├── Anchor.toml                   # Anchor framework config
│   └── Cargo.toml                    # Rust workspace config
│
├── 🔗 Smart Contracts (Solana Programs)
│   ├── programs/
│   │   ├── umanity-donations/        # Donation pools program
│   │   │   ├── Cargo.toml
│   │   │   └── src/
│   │   │       └── lib.rs            # 300+ lines
│   │   │           ├── initialize_pool()
│   │   │           ├── one_tap_donate()
│   │   │           ├── donate_to_pool()
│   │   │           └── withdraw_from_pool()
│   │   │
│   │   └── umanity-tips/             # Tipping system program
│   │       ├── Cargo.toml
│   │       └── src/
│   │           └── lib.rs            # 250+ lines
│   │               ├── register_user()
│   │               ├── send_tip()
│   │               ├── update_profile()
│   │               └── toggle_active()
│
├── ⚛️  Frontend Application (Next.js 15)
│   ├── app/
│   │   ├── layout.tsx                # Root layout with wallet provider
│   │   ├── page.tsx                  # Main page (tabs: donate/pools/tips)
│   │   ├── globals.css               # Global styles (inspired by base theme)
│   │   │
│   │   └── api/                      # Backend API routes
│   │       ├── pools/
│   │       │   ├── route.ts          # GET pools
│   │       │   └── donate/
│   │       │       └── route.ts      # POST donation
│   │       │
│   │       ├── register/
│   │       │   ├── route.ts          # POST register user
│   │       │   └── check/
│   │       │       └── route.ts      # GET check registration
│   │       │
│   │       └── tips/
│   │           ├── users/
│   │           │   └── route.ts      # GET all users
│   │           └── send/
│   │               └── route.ts      # POST send tip
│   │
│   └── components/
│       ├── wallet/
│       │   └── WalletProvider.tsx    # Solana wallet adapter integration
│       │
│       ├── donation/
│       │   ├── OneTapDonation.tsx    # One-tap $1 donations UI
│       │   └── DonationPools.tsx     # Custom amount pools UI
│       │
│       └── tips/
│           └── TippingSystem.tsx     # User registration & tipping UI
│
├── 🛠️  Scripts
│   └── scripts/
│       └── setup.sh                  # Automated project setup
│
└── 📚 Documentation
    ├── README.md                     # Main project documentation
    ├── QUICKSTART.md                 # 5-minute quick start guide
    ├── DEPLOYMENT.md                 # Comprehensive deployment guide
    ├── HACKATHON_SUBMISSION.md       # Hackathon pitch & submission details
    ├── PROJECT_SUMMARY.md            # Complete project overview
    └── PROJECT_TREE.txt              # This file

════════════════════════════════════════════════════════════════════════

📊 Project Statistics:
   - Smart Contract Code: ~600 lines (Rust)
   - Frontend Code: ~1,200 lines (TypeScript/React)
   - API Routes: 6 endpoints
   - React Components: 4 major components
   - Documentation: 5 comprehensive guides

🎯 Core Features:
   ✅ One-Tap $1 Donations
   ✅ Custom Amount Donation Pools
   ✅ Peer-to-Peer Tipping System
   ✅ User Registration & Profiles
   ✅ Real-time On-Chain Tracking

🔧 Tech Stack:
   - Blockchain: Solana (Devnet/Mainnet)
   - Smart Contracts: Anchor Framework (Rust)
   - Frontend: Next.js 15, React 19, TypeScript
   - Wallet: Solana Wallet Adapter
   - Styling: Tailwind CSS (minimalist black/white theme)

🚀 Ready to Deploy:
   1. Run: ./scripts/setup.sh
   2. Deploy: anchor deploy --provider.cluster devnet
   3. Update program IDs
   4. Run: npm run dev
   5. Open: http://localhost:3000

════════════════════════════════════════════════════════════════════════
